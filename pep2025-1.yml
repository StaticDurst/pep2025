#--/////////////////////////////////////////Конфигурация узла 1 (бэкапы) - artem-pep2025-1.infra.nova                           172.24.48.11
scope: pg17
name:  artem-pep2025-1.infra.nova  #------------------------------------------
namespace: /etc/patroni/namespace/

restapi:
    listen:          0.0.0.0:8008
    connect_address: 172.24.48.11:8008  #------------------------------------------

log:
  dir:             /var/log/patroni
  file_num:        30
  file_size:       10000000
  level:           WARNING
  type:            plain
  format:          '%(asctime)s %(levelname)s: %(message)s'
  dateformat:      '%d-%m-%Y %H:%M:%S'
  traceback_level: ERROR
  max_queue_size:  1000
  loggers:
    postgres.postmaster: WARNING
    urllib3:             DEBUG

etcd:
  hosts:
  - 172.24.48.11:2379
  - 172.24.48.72:2379
  - 172.24.48.115:2379

bootstrap:
  method: initdb # initdb для 1 ноды, для следующих пойдет basebackup или restore
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    master_start_timeout: 300
    synchronous_mode: true
    synchronous_mode_strict: false
    synchronous_node_count: 1
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        #одинаковые параметры на всех репликах
        max_connections: 50
        max_locks_per_transaction: 64
        max_prepared_transactions: 0
        max_replication_slots: 8
        max_wal_senders: 10
        max_worker_processes: 4
        track_commit_timestamp: off
        wal_keep_size: 128MB
        wal_level: replica

        logging_collector: on
        log_truncate_on_rotation: on
        log_filename: 'postgresql-%d-%m-%Y_%H-%M-%S.log'
        log_rotation_age: 1440 # 24 часа
        log_line_prefix: '%m; user=%u; db=%d; remoteHost=%h; PID=%p; session_ID=%c; app=%a'
        log_directory: /var/log/postgresql/
        log_min_messages: WARNING
        log_autovacuum_min_duration: 60s
        log_min_error_statement: NOTICE
        log_min_duration_statement: 30s
        log_checkpoints: on
        log_statement: ddl
        log_lock_waits: on
        deadlock_timeout: 100s
        log_temp_files: 0
        log_timezone: Europe/Moscow
        hot_standby: on

        #default extension
        shared_preload_libraries: 'pg_stat_statements'
        compute_query_id: on
        pg_stat_statements.max: 10000
        pg_stat_statements.track: all
        #pg_cron видимо придется ставить руками и отдельно
        #cron.database_name:'postgres'
        #cron.use_background_workers:on

        #настроить фулл бекап и инкремент сначала на primary  через pgbackrest, потом уронить и попробовать восстановить.
        #затем сделать тоже самое на реплике, но чтобы бекапы снимались именно на 2 реплике
        #восстановить 3 реплику из бекапа на второй реплике
        archive_command: 'pgbackrest --stanza=pg17 archive-push %p'           # команда, для архивации завершённого WAL-журнала;
        # archive_command = 'pgbackrest --stanza=patroni_cls archive-push %p && cp -i %p /var/lib/pgsql/archive/%f'
        archive_mode: "on"                                                    # включение загрузки WAL-журналов используя команду из параметра archive_command;
        archive_timeout: 300s                                                 # ограничить время жизни неархивированных данных, чтобы сервер переключался на новый файл сегмента WAL
                                                                              # как минимум с заданной частотой. 300s=5m
        checkpoint_timeout: 30min

  initdb:
  - encoding: UTF8
  - data-checksums

  pg_hba:
  - local all         all                         trust         # FOR PG_CRON
  - host  all         telegraf   127.0.0.1/32     trust         # FOR TELEFRAF
  - host  replication replicator 127.0.0.1/32     trust         # FOR REPLICATION ???
  - host  replication all        172.24.48.11/25  scram-sha-256 # FOR REPLICATION
  - host  replication all        172.24.48.72/25  scram-sha-256 # FOR REPLICATION
  - host  replication all        172.24.48.115/25 scram-sha-256 # FOR REPLICATION
  - host  all         all        172.24.13.10/24  scram-sha-256 # FOR DBA'S VM

  users:                                     #API PATRONI curl -u admin:admin http://172.24.48.11:8008/config
    admin:
      password: Qwerty12345
      options:
        - createrole
        - createdb

postgresql:
  listen:          0.0.0.0:5432
  connect_address: 172.24.48.11:5432 #------------------------------------------
  data_dir:        /data/pg_data
  config_dir:      /data/pg_data
  bin_dir:         /usr/lib/postgresql/17/bin
  authentication:
    replication:
      username: replicator
      password: wsxedc
    superuser:
      username: postgres
      password: Qwerty12345

  parameters:
    unix_socket_directories: '/var/run/postgresql'
#  create_replica_methods:
#   - pgbackrest
#   - basebackup
# pgbackrest:
#  command: pgbackrest --stanza=pg17 restore --type=none
#  keep_data: True
#  no_params: True
# basebackup:
#   checkpoint: 'fast'

tags:
    nofailover:    false
    noloadbalance: false
    clonefrom:     false
    nosync:        false
